{"version":3,"file":"commonHelpers2.js","sources":["../src/img/bi_check2-circle.svg","../src/js/2-snackbar.js"],"sourcesContent":["export default \"__VITE_ASSET__0948d670__\"","'use strict';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport superIconOk from '../img/bi_check2-circle.svg';\n\nconst btnTarget = document.querySelector('.form button');\n\nbtnTarget.addEventListener('click', (event) => {\n  event.preventDefault();\n\n  const inputValue = document.querySelector('.form input[name=\"delay\"]').value;\n  const fieldsetValue = document.querySelector('.form fieldset input[name=\"state\"]:checked').value;\n  console.log(inputValue);\n  console.log(fieldsetValue);\n  if (inputValue <= 1) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter time in milliseconds',\n    });\n    inputValue = \"\";\n  }\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (fieldsetValue === 'fulfilled') {\n        resolve(inputValue);\n      } else {\n        reject(inputValue);\n      }\n    }, inputValue);\n  });\n\n  promise\n    .then((delay) => {\n      iziToast.success({\n        backgroundColor: '#59A10D',\n        iconUrl: superIconOk,\n        iconColor: '#FFFFFF',\n        titleColor: '#FFFFFF',\n        progressBarColor: '#326101',\n        position: 'topRight',\n        timeout: 3000,\n        closeColor: '#FFFFFF',\n        theme: 'dark',\n        title: 'OK',\n        message: `Fulfilled promise in ${delay}ms`,\n      });\n    })\n    .catch((delay) => {\n      iziToast.error({\n        title: 'Rejected Promise',\n        message: `‚ùå Promise rejected in ${delay}ms`,\n      });\n    });\n});\n\nfunction changeFieldsetBorderColor(inputElement) {\n  fieldsetElement.style.borderColor = inputElement.checked ? '#808080' : '#d3d3d3';\n};\n\nconst fieldsetElement = document.querySelector('.form fieldset');\nconst inputElements = fieldsetElement.querySelectorAll('input');\n\nfor (const inputElement of inputElements) {\n  inputElement.addEventListener('change', changeFieldsetBorderColor);\n};\n"],"names":["superIconOk","btnTarget","event","inputValue","fieldsetValue","iziToast","resolve","reject","delay","changeFieldsetBorderColor","inputElement","fieldsetElement","inputElements"],"mappings":"oGAAA,MAAeA,EAAA,sDCMTC,EAAY,SAAS,cAAc,cAAc,EAEvDA,EAAU,iBAAiB,QAAUC,GAAU,CAC7CA,EAAM,eAAc,EAEpB,MAAMC,EAAa,SAAS,cAAc,2BAA2B,EAAE,MACjEC,EAAgB,SAAS,cAAc,4CAA4C,EAAE,MAC3F,QAAQ,IAAID,CAAU,EACtB,QAAQ,IAAIC,CAAa,EACrBD,GAAc,IAChBE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,mCACf,CAAK,EACDF,EAAa,IAGC,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXH,IAAkB,YACpBE,EAAQH,CAAU,EAElBI,EAAOJ,CAAU,CAEpB,EAAEA,CAAU,CACjB,CAAG,EAGE,KAAMK,GAAU,CACfH,EAAS,QAAQ,CACf,gBAAiB,UACjB,QAASL,EACT,UAAW,UACX,WAAY,UACZ,iBAAkB,UAClB,SAAU,WACV,QAAS,IACT,WAAY,UACZ,MAAO,OACP,MAAO,KACP,QAAS,wBAAwBQ,CAAK,IAC9C,CAAO,CACP,CAAK,EACA,MAAOA,GAAU,CAChBH,EAAS,MAAM,CACb,MAAO,mBACP,QAAS,yBAAyBG,CAAK,IAC/C,CAAO,CACP,CAAK,CACL,CAAC,EAED,SAASC,EAA0BC,EAAc,CAC/CC,EAAgB,MAAM,YAAcD,EAAa,QAAU,UAAY,SACzE,CAEA,MAAMC,EAAkB,SAAS,cAAc,gBAAgB,EACzDC,EAAgBD,EAAgB,iBAAiB,OAAO,EAE9D,UAAWD,KAAgBE,EACzBF,EAAa,iBAAiB,SAAUD,CAAyB"}