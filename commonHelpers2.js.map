{"version":3,"file":"commonHelpers2.js","sources":["../src/img/bi_check2-circle.svg","../src/js/2-snackbar.js"],"sourcesContent":["export default \"__VITE_ASSET__0948d670__\"","  'use strict';\n\n  import iziToast from 'izitoast';\n  import 'izitoast/dist/css/iziToast.min.css';\n  import superIconOk from '../img/bi_check2-circle.svg';\n\n  const formTarget = document.querySelector('.form');\n\n  const timeSnack = (event) => {\n      event.preventDefault();\n      const inputValue = event.target.elements.delay.value;\n      const fieldsetValue = event.target.elements.state.value;\n      formTarget.reset();\n      return new Promise((resolve,reject) => {\n          setTimeout(() => {\n              if (fieldsetValue === 'fulfilled') {\n                resolve(inputValue);  \n              }\n              else {\n                reject(inputValue); \n              };\n          }, inputValue);\n      })\n  };\n  \n  formTarget.addEventListener('submit', event => {\n      timeSnack(event)\n      .then(value => \n              iziToast.success({\n                  backgroundColor: '#59A10D',\n                  iconUrl: superIconOk,\n                  iconColor: '#FFFFFF',\n                  titleColor: '#FFFFFF',\n                  progressBarColor: '#326101',\n                  position: 'topCenter',\n                  timeout: 3000,\n                  closeColor: '#FFFFFF',\n                  theme: 'dark',\n                  title: 'OK',\n                  message: `Fulfilled promise in ${value} ms`,\n              })\n          )\n      .catch(error =>\n              iziToast.error({\n                title: 'Rejected Promise',\n                position: 'topCenter',\n                message: `‚ùå Promise rejected in ${error} ms`,\n              })\n          )    \n  });\n\n\n  function changeFieldsetBorderColor(inputElement) {\n    fieldsetElement.style.borderColor = inputElement.checked ? '#808080' : '#d3d3d3';\n  };\n\n  const fieldsetElement = document.querySelector('.form fieldset');\n  const inputElements = fieldsetElement.querySelectorAll('input');\n\n  for (const inputElement of inputElements) {\n    inputElement.addEventListener('change', changeFieldsetBorderColor);\n  };\n"],"names":["superIconOk","formTarget","timeSnack","event","inputValue","fieldsetValue","resolve","reject","value","iziToast","error","changeFieldsetBorderColor","inputElement","fieldsetElement","inputElements"],"mappings":"oGAAA,MAAeA,EAAA,sDCMPC,EAAa,SAAS,cAAc,OAAO,EAE3CC,EAAaC,GAAU,CACzBA,EAAM,eAAc,EACpB,MAAMC,EAAaD,EAAM,OAAO,SAAS,MAAM,MACzCE,EAAgBF,EAAM,OAAO,SAAS,MAAM,MAClD,OAAAF,EAAW,MAAK,EACT,IAAI,QAAQ,CAACK,EAAQC,IAAW,CACnC,WAAW,IAAM,CACTF,IAAkB,YACpBC,EAAQF,CAAU,EAGlBG,EAAOH,CAAU,CAEtB,EAAEA,CAAU,CACvB,CAAO,CACP,EAEEH,EAAW,iBAAiB,SAAUE,GAAS,CAC3CD,EAAUC,CAAK,EACd,KAAKK,GACEC,EAAS,QAAQ,CACb,gBAAiB,UACjB,QAAST,EACT,UAAW,UACX,WAAY,UACZ,iBAAkB,UAClB,SAAU,YACV,QAAS,IACT,WAAY,UACZ,MAAO,OACP,MAAO,KACP,QAAS,wBAAwBQ,CAAK,KACxD,CAAe,CACJ,EACJ,MAAME,GACCD,EAAS,MAAM,CACb,MAAO,mBACP,SAAU,YACV,QAAS,yBAAyBC,CAAK,KACvD,CAAe,CACJ,CACX,CAAG,EAGD,SAASC,EAA0BC,EAAc,CAC/CC,EAAgB,MAAM,YAAcD,EAAa,QAAU,UAAY,SAE3E,CACE,MAAMC,EAAkB,SAAS,cAAc,gBAAgB,EACzDC,EAAgBD,EAAgB,iBAAiB,OAAO,EAE9D,UAAWD,KAAgBE,EACzBF,EAAa,iBAAiB,SAAUD,CAAyB"}